//Autor: Franco Larrea

using System;

class Menu
{
    protected readonly string[] opciones;

    protected int posColumna;
    protected int posFila;

    protected int ultimaFila;
    protected int anchoMaximo;

    protected int seleccionActual;

    protected int filasDescripcion = 0;

    protected ConsoleColor colorLetra = ConsoleColor.White;
    protected ConsoleColor colorFondo = ConsoleColor.Black;
    protected ConsoleColor colorValido = ConsoleColor.Green;
    protected ConsoleColor colorError = ConsoleColor.Red;

    public Menu(string[] opciones)
    {
        seleccionActual = 1;
        this.opciones = opciones;

        posFila = 1;
        posColumna = 2;

        ultimaFila = posFila + opciones.Length;
    }

    public void EstablecerColorConsola(ConsoleColor colorLetra, ConsoleColor colorFondo)
    {
        Console.ForegroundColor = colorLetra;
        Console.BackgroundColor = colorFondo;
    }

    public void MostrarCursor()
    {
        Console.CursorVisible = true;
    }

    public void OcultarCursor()
    {
        Console.CursorVisible = false;
    }

    public void EstablecerPosicionCursor(int fila, int columna)
    {
        if (fila > 0 && fila < Console.WindowHeight)
            Console.CursorTop = fila;

        if (columna > 0 && columna < Console.WindowWidth)
            Console.CursorLeft = columna;
    }

    public string EjecutarMenu()
    {
        bool ejecutar = true;
        OcultarCursor();
        MostrarMenu();

        while (ejecutar)
        {
            ConsoleKey teclaPresionada = ComprobarTeclaPresionada();

            if (teclaPresionada == ConsoleKey.UpArrow)
            {
                seleccionActual--;

                if (seleccionActual < 1)
                    seleccionActual = opciones.Length;
            }
            else if (teclaPresionada == ConsoleKey.DownArrow ||
                teclaPresionada == ConsoleKey.Tab)
            {
                seleccionActual++;

                if (seleccionActual > opciones.Length)
                    seleccionActual = 1;
            }
            else if (teclaPresionada == ConsoleKey.Enter)
            {
                ejecutar = false;
            }
            else if (teclaPresionada == ConsoleKey.Escape)
            {
                return opciones.Length.ToString();
            }

            MostrarMenu();
        }

        return seleccionActual.ToString();
    }

    protected void MostrarMenu()
    {
        for (int i = 0; i < opciones.Length; i++)
        {
            EstablecerPosicionCursor(posFila + i + 3 + filasDescripcion, posColumna);

            EstablecerColorConsola(colorLetra, colorFondo);

            if (i == seleccionActual - 1)
                EstablecerColorConsola(colorFondo, colorLetra);

            Console.WriteLine("  " + opciones[i] + "  ");
            Console.ResetColor();
        }

        ultimaFila = posFila + opciones.Length + 1 + 3 + filasDescripcion;

        EstablecerPosicionCursor(0, 0);

    }

    public void MostrarTitulo(string titulo)
    {
        Console.SetCursorPosition(0, 0);
        for (int i = 0; i < Console.WindowWidth; i++)
            Console.Write("_");

        Console.SetCursorPosition(0, 1);
        for (int i = 0; i < Console.WindowWidth; i++)
            Console.Write(" ");

        int colTitulo = (Console.WindowWidth / 2) - (titulo.Length / 2);
        Console.SetCursorPosition(colTitulo, 1);

        Console.WriteLine(titulo);

        Console.SetCursorPosition(0, 2);
        for (int i = 0; i < Console.WindowWidth; i++)
            Console.Write("_");

        OcultarCursor();
    }

    public void MostrarDescripcion(string[] descripcion)
    {
        filasDescripcion = descripcion.Length;

        for (int i = 0; i < descripcion.Length; i++)
        {
            ultimaFila = 3 + i;
            EstablecerPosicionCursor(ultimaFila, Console.WindowWidth / 2 - (descripcion[0].Length / 2));

            Console.WriteLine(descripcion[i]);
        }
    }

    public void CentrarMenu()
    {
        posColumna = Console.WindowWidth / 2 - (opciones[0].Length / 2);
    }

    protected ConsoleKey ComprobarTeclaPresionada()
    {
        ConsoleKeyInfo keyInfo = Console.ReadKey(true);

        do
        {
            ConsoleKey keyPressed = keyInfo.Key;

            if (keyPressed == ConsoleKey.UpArrow)
            {
                return ConsoleKey.UpArrow;
            }
            else if (keyPressed == ConsoleKey.DownArrow)
            {
                return ConsoleKey.DownArrow;
            }
            else if (keyPressed == ConsoleKey.Enter)
            {
                return ConsoleKey.Enter;
            }
            else if (keyPressed == ConsoleKey.Tab)
            {
                return ConsoleKey.Tab;
            }
            else if (keyPressed == ConsoleKey.Escape)
            {
                return ConsoleKey.Escape;
            }
            else
            {
                return 0;
            }

        } while (true);
    }

    public void MostrarMensaje(string mensaje, bool espera = true, int masFilas = 0)
    {
        ultimaFila = opciones.Length + 2 + 3 + filasDescripcion + masFilas;
        EstablecerPosicionCursor(ultimaFila, posColumna);
        Console.WriteLine(mensaje);

        if (espera)
            Thread.Sleep(1000);
    }

    public void MostrarMensajeCorrecto(string mensaje, bool espera = true, int masFilas = 0)
    {
        ultimaFila = opciones.Length + 2 + 3 + filasDescripcion + masFilas;

        EstablecerColorConsola(colorValido, colorFondo);

        EstablecerPosicionCursor(ultimaFila, posColumna);
        Console.WriteLine(mensaje);

        Console.ResetColor();

        if (espera)
            Thread.Sleep(1000);
    }

    public void MostrarMensajeError(string mensaje, bool espera = true, int masFilas = 0)
    {
        ultimaFila = opciones.Length + 2 + 3 + filasDescripcion + masFilas;

        EstablecerColorConsola(colorError, colorFondo);

        EstablecerPosicionCursor(ultimaFila, posColumna);
        Console.WriteLine(mensaje);

        Console.ResetColor();

        if (espera)
            Thread.Sleep(1000);
    }

    public static void MostrarMensajeGuardado(
        string mensaje, bool espera = true, int masFilas = 0, 
        ConsoleColor color = ConsoleColor.Gray)
    {
        Console.SetCursorPosition(1, masFilas);

        Console.ForegroundColor = color;
        Console.WriteLine(mensaje);
        Console.ResetColor();

        if (espera)
            Thread.Sleep(1000);
    }

    public string Pedir(string mensaje, bool writeLine = false, int masFilas = 0)
    {
        ultimaFila = opciones.Length + 2 + 3 + filasDescripcion + masFilas;

        MostrarCursor();
        EstablecerPosicionCursor(ultimaFila, posColumna);

        if (writeLine) 
        {
            Console.WriteLine(mensaje);
            EstablecerPosicionCursor(ultimaFila+1, posColumna);
        }
        else
            Console.Write(mensaje);

        string entrada = Console.ReadLine();

        if (!entrada.Equals(""))
            ultimaFila = ultimaFila + 1;

        return entrada;
    }

    public void LimpiarPantalla()
    {
        Console.Clear();
    }

    public void EsperarEnter(int masFilas = 0)
    {
        MostrarMensaje("[ Presione enter para continuar ]", false, masFilas);
        Console.ReadKey();
    }

    public string PedirOcultando(string mensaje, int masFilas = 0)
    {
        ultimaFila = opciones.Length + 2 + 3 + filasDescripcion + masFilas;

        EstablecerPosicionCursor(ultimaFila, posColumna);

        Console.Write(mensaje);

        string contrasena = "";
        do
        {
            ConsoleKeyInfo key = Console.ReadKey(true);

            if (key.Key != ConsoleKey.Backspace && key.Key != ConsoleKey.Enter)
            {
                contrasena += key.KeyChar;
                Console.Write("*");
            }
            else
            {
                if (key.Key == ConsoleKey.Backspace && contrasena.Length > 0)
                {
                    contrasena = contrasena.Substring(0, (contrasena.Length - 1));
                    Console.Write("\b \b");

                }
                else if (key.Key == ConsoleKey.Enter) { break; }
            }
        } while (true);

        Console.WriteLine();

        return contrasena;
    }
}
