//Autor: Franco Larrea

using System;
using System.Net;

[Serializable]
class Maquina : Juego
{
    protected string primerUsuario = "";
    protected string primerRoot = "";
    
    protected string banderaUsuario;
    protected string banderaRoot;

    protected string cDocker;

    protected List<Writeup> writeups = new List<Writeup>();

    public Maquina(string nombre, int dificultad, string autor,
        string banderaUsuario, string banderaRoot, string cDocker)
        : base(nombre, dificultad, autor)
    {
        this.banderaUsuario = banderaUsuario;
        this.banderaRoot = banderaRoot;
        this.cDocker = cDocker;
    }

    public string PrimerUsuario
    {
        get { return primerUsuario; }
        set { primerUsuario = value; }
    }

    public string PrimerRoot
    {
        get { return primerRoot; }
        set { primerRoot = value; }
    }

    public string BanderaUsuario
    {
        get { return banderaUsuario; }
        set { banderaUsuario = value; }
    }
    
    public string BanderaRoot
    {
        get { return banderaRoot; }
        set { banderaRoot = value; }
    }

    public string CDocker
    {
        get { return cDocker; }
        set { cDocker = value; }
    }

    public void MostrarInformacion(Menu menu, bool espera = false, int masFilas = 0)
    {
        menu.MostrarMensaje("<<< " + nombre + " >>>", espera, masFilas);
        menu.MostrarMensaje("Dificultad: " + dificultad + "/5", espera, masFilas + 1);
        menu.MostrarMensaje("Veces resuelta: " + vecesResuelta, espera, masFilas + 2);
        menu.MostrarMensaje("Autor: " + autor, espera, masFilas + 3);
        menu.MostrarMensaje("Fecha de creación: " + fechaDeCreacion.ToString("d"), espera, masFilas + 4);
        menu.MostrarMensaje("Primer usuario: " + primerUsuario, espera, masFilas + 5);
        menu.MostrarMensaje("Primer root: " + primerRoot, espera, masFilas + 6);
    }

    public int numeroDeWriteups()
    {
        return writeups.Count;
    }

    public void AnadirWriteup(Writeup writeup, 
        Menu menu, bool espera = true, int masFilas = 0)
    {
        bool writeupExiste = false;
        string autor = writeup.Autor;
        int indice = 0;

        while (!writeupExiste && indice < writeups.Count())
        {
            Writeup w = writeups[indice];

            if (w.Autor.Equals(autor))
                writeupExiste = true;

            indice++;
        }

        if (writeupExiste)
        {
            menu.MostrarMensajeError("Ya tiene un writeup en esta máquina, " +
                "elimínelo antes de subir otro.", espera, masFilas + 4);
        }
        else
        {
            writeups.Add(writeup);
            menu.MostrarMensajeCorrecto("Writeup añadido en la maquina " + nombre, espera, masFilas + 4);
        }
    }

    public void EliminarWriteup(string autor,
        Menu menu, bool espera = true, int masFilas = 0)
    {
        writeups.RemoveAll(writeup => writeup.Autor.Equals(autor));
        menu.MostrarMensajeCorrecto("Writeup eliminado en la maquina " + nombre, espera, masFilas);
    }

    public void MostrarWriteups(Menu menu, bool espera = false, int masFilas = 0)
    {

        if (writeups.Count() > 0)
        {
            int i;

            for (i = 0; i < writeups.Count(); i++)
                menu.MostrarMensaje(writeups[i].ToString(), espera, masFilas + i + 1);

            menu.EsperarEnter(masFilas + i + 2);
        }
        else
            menu.MostrarMensaje("No hay writeups.", true, masFilas);
    }

    public void DescargarWriteups(Menu menu, bool espera, int masFilas)
    {
        if (writeups.Count() > 0) 
        {
            try
            {
                StreamWriter fich;
                fich = File.CreateText(Nombre + "Writeups.md");
                fich.WriteLine("# Writeups de " + Nombre);

                foreach (Writeup w in writeups) 
                {
                    fich.WriteLine("------------");
                    fich.WriteLine("### Autor: " + w.Autor);
                    fich.WriteLine(w.Contenido);
                    fich.WriteLine("------------");
                }

                fich.Close();
                menu.MostrarMensajeCorrecto("Writeups descargados.", espera, masFilas);
            }
            catch (PathTooLongException)
            {
                menu.MostrarMensajeError("Nombre demasiado largo.", espera, masFilas);
            }
            catch (IOException e)
            {
                menu.MostrarMensajeError("Error de E/S: " + e.Message, espera, masFilas);
            }
            catch (Exception e)
            {
                menu.MostrarMensajeError("Error inesperado: " + e.Message, espera, masFilas);
            }
        }
        else
            menu.MostrarMensajeError("No hay writeups", espera, masFilas);
    }

    public override string ToString()
    {
        return nombre + ", " + dificultad + "/5" +
            ", Veces resuelta = " + vecesResuelta +
            ", Autor = " + autor +
            ", Fecha de creacion = " + fechaDeCreacion.ToString("dd/MM/yyyy");
    }

}
